
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BALANCE BUY COMMA CROSSOVER EMA EQ GE GT IF LE LPAREN LT NOT NUMBER OR PRICE RPAREN RSI SELL SMA VOLUMEstrategy : buy_strategy\n                | sell_strategy\n                | conditional_strategybuy_strategy : BUY IF simple_conditionsell_strategy : SELL IF simple_conditionconditional_strategy : IF compound_conditioncompound_condition : simple_condition AND simple_condition\n                          | simple_condition OR simple_condition\n                          | NOT simple_condition\n                          | LPAREN compound_condition RPARENsimple_condition : PRICE comparison NUMBER\n                        | VOLUME comparison NUMBERcomparison : LT\n                  | GT\n                  | LE\n                  | GE\n                  | EQ'
    
_lr_action_items = {'BUY':([0,],[5,]),'SELL':([0,],[7,]),'IF':([0,5,7,],[6,8,15,]),'$end':([1,2,3,4,9,16,19,28,29,30,31,32,33,],[0,-1,-2,-3,-6,-4,-9,-5,-7,-8,-10,-11,-12,]),'NOT':([6,12,],[11,11,]),'LPAREN':([6,12,],[12,12,]),'PRICE':([6,8,11,12,15,17,18,],[13,13,13,13,13,13,13,]),'VOLUME':([6,8,11,12,15,17,18,],[14,14,14,14,14,14,14,]),'AND':([10,32,33,],[17,-11,-12,]),'OR':([10,32,33,],[18,-11,-12,]),'LT':([13,14,],[22,22,]),'GT':([13,14,],[23,23,]),'LE':([13,14,],[24,24,]),'GE':([13,14,],[25,25,]),'EQ':([13,14,],[26,26,]),'RPAREN':([19,20,29,30,31,32,33,],[-9,31,-7,-8,-10,-11,-12,]),'NUMBER':([21,22,23,24,25,26,27,],[32,-13,-14,-15,-16,-17,33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'strategy':([0,],[1,]),'buy_strategy':([0,],[2,]),'sell_strategy':([0,],[3,]),'conditional_strategy':([0,],[4,]),'compound_condition':([6,12,],[9,20,]),'simple_condition':([6,8,11,12,15,17,18,],[10,16,19,10,28,29,30,]),'comparison':([13,14,],[21,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> strategy","S'",1,None,None,None),
  ('strategy -> buy_strategy','strategy',1,'p_strategy','parser.py',11),
  ('strategy -> sell_strategy','strategy',1,'p_strategy','parser.py',12),
  ('strategy -> conditional_strategy','strategy',1,'p_strategy','parser.py',13),
  ('buy_strategy -> BUY IF simple_condition','buy_strategy',3,'p_buy_strategy','parser.py',18),
  ('sell_strategy -> SELL IF simple_condition','sell_strategy',3,'p_sell_strategy','parser.py',23),
  ('conditional_strategy -> IF compound_condition','conditional_strategy',2,'p_conditional_strategy','parser.py',28),
  ('compound_condition -> simple_condition AND simple_condition','compound_condition',3,'p_compound_condition','parser.py',33),
  ('compound_condition -> simple_condition OR simple_condition','compound_condition',3,'p_compound_condition','parser.py',34),
  ('compound_condition -> NOT simple_condition','compound_condition',2,'p_compound_condition','parser.py',35),
  ('compound_condition -> LPAREN compound_condition RPAREN','compound_condition',3,'p_compound_condition','parser.py',36),
  ('simple_condition -> PRICE comparison NUMBER','simple_condition',3,'p_simple_condition','parser.py',46),
  ('simple_condition -> VOLUME comparison NUMBER','simple_condition',3,'p_simple_condition','parser.py',47),
  ('comparison -> LT','comparison',1,'p_comparison','parser.py',52),
  ('comparison -> GT','comparison',1,'p_comparison','parser.py',53),
  ('comparison -> LE','comparison',1,'p_comparison','parser.py',54),
  ('comparison -> GE','comparison',1,'p_comparison','parser.py',55),
  ('comparison -> EQ','comparison',1,'p_comparison','parser.py',56),
]
